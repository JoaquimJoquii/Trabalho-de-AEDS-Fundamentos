DOCUMENTAÇÃO DAS FUNCIONALIDADES ESPERADAS PARA O SISTEMA:

*Cadastro de Compradores*: a funcionalidade deve permitir o cadastro, remoção, edição e apresentação dos objetos compradores cadastrados em "../arquivos/compradores.txt" de modo que os objetos já cadastrados não sejam afetados

funções subordinadas à funcionalidade(assinatura dos métodos): 
    apresentarCompradores(): a função deve apresentar todos os compradores já cadastrados nos arquivos.txt do projeto, ordenando-os de modo organizado e visualmente agradável.

    deletarCompradores(char nome[100]): a função deve deletar o comprador selecionado e apenas ele de dentro dos arquivos.txt do projeto

    cadastrarCompradores(int quant): a função deve adicionar um novo comprador para dentro do arquivo.txt do projeto. Cada novo comprador teve ter um id único para facilitar a sua seleção

    editarCompradores(char nome[100]): a função deve capturar um comprador em especifico de dentro do arquivo.txt usando do id e alterar seus dados
-------------------------------------------------------------
*Cadastro de Venda*:  a funcionalidade deve permitir o cadastro, remoção, edição e apresentação dos objetos vendas cadastrados em "../arquivos/vendas.txt" de modo que os objetos já cadastrados não sejam afetados

funções subordinadas à funcionalidade(assinatura dos métodos):

void menuVendas():Função principal que exibe o menu e gerencia a navegação entre funcionalidades de vendas.

void alterarVenda(): Edita uma venda existente. A venda é selecionada por de um id único pertencente a cada venda. Primeiro remove a venda antiga e depois recria com novos dados.

void deletarVenda(): Remove uma venda específica do arquivo com base no seu código único.

void listarVendas(): Lê e exibe no terminal todas as vendas armazenadas em "../../arquivos/vendas.txt"

void novaVenda(): Cadastra uma nova venda, coletando dados do vendedor, comprador e itens, e grava em "../../arquivos/vendas.txt".

int gerarCodigo(): Gera um número sequencial para o código da venda, salva o ultimo numero gerado em "../../arquivos/codigo.txt" para impedir a geração de um código duplicado.

-------------------------------------------------------------
*Cadastro de Produtos*: A funcionalidade deve permitir o cadastro, remoção, edição e apresentação dos objetos produtos cadastrados em "../arquivos/produtos.txt", de modo que os objetos já cadastrados não sejam afetados durante novas operações.

funções subordinadas à funcionalidade(assinatura dos métodos):
    apresentarProdutos(): A função deve apresentar todos os produtos já cadastrados no arquivo "produtos.txt", exibindo-os de forma organizada e visualmente clara para o usuário.

    deletarProduto(int codigo): A função deve remover o produto selecionado do arquivo "produtos.txt" utilizando seu código como identificador único, garantindo que apenas esse produto seja excluído sem alterar os demais registros.

    editarProduto(int codigo): A função deve localizar um produto específico no arquivo "produtos.txt" com base no seu codigo e permitir a atualização dos seus dados (nome, quantidade e preço), mantendo o mesmo identificador após a modificação.

    consultarProduto(int codigo): A função deve buscar e exibir as informações de um produto específico no sistema utilizando seu codigo como identificador único. Caso o produto não seja encontrado, deve retornar uma mensagem informando que o produto não está cadastrado.

    listarProdutos(): A função deve apresentar todos os produtos já cadastrados no arquivo "produtos.txt", exibindo-os em uma lista ordenada e formatada de maneira clara e visualmente agradável, mostrando nome, código, quantidade em estoque e preço de venda.
-------------------------------------------------------------
*Cadastro de Vendedores*: 

funções subordinadas à funcionalidade(assinatura dos métodos):

-------------------------------------------------------------
*Emissão de Nota Fiscal e Cálculo de frete*: A funcionalidade deve permitir a emissão de notas fiscais em "../../arquivos/notas_fiscais.txt" contendo o comprador, o vendedor, os produtos e o frete

funções subordinadas à funcionalidade(assinatura dos métodos):

float calcularFrete(float valor): a funcionalidade calcula o frete com base no valor total dos itens fornecidos durante a venda, atribuindo o valor de 30,00 para total de até 100,00 nos produtos; 20,00 para total de 100,01 até 300,00 e acima de 300,00 o frete é gratis.

void emitirNota():Emite uma nota fiscal em formato .txt com os dados da venda selecionada por meio de um código único atribuido para cada venda, e salva essa nota em ../../arquivos/nota_fiscal.txt